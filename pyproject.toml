[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dsrag"
version = "0.5.0"
description = "State-of-the-art RAG pipeline from D-Star AI"
readme = "README.md"
authors = [{ name = "Zach McCormick", email = "zach@d-star.ai" }, { name = "Nick McCormick", email = "nick@d-star.ai" }]
license = { file = "LICENSE" }
classifiers=[
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.9"
# Remove the dynamic dependencies to avoid circular reference
dependencies = []  # Core dependencies are now managed in requirements.in/requirements.txt

# Remove this section to avoid circular reference
# [tool.setuptools.dynamic]
# dependencies = {file = ["requirements.txt"]}

[project.urls]
Homepage = "https://github.com/D-Star-AI/dsRAG"
Documentation = "https://github.com/D-Star-AI/dsRAG"
Contact = "https://github.com/D-Star-AI/dsRAG"

[project.optional-dependencies]
# Database optional dependencies
faiss = ["faiss-cpu>=1.8.0"]
chroma = ["chromadb>=0.5.5"]
weaviate = ["weaviate-client>=4.6.0"]
qdrant = ["qdrant-client>=1.8.0"]
milvus = ["pymilvus>=2.3.5"]
pinecone = ["pinecone>=3.0.0"]
boto3 = ["boto3>=1.28.0"]

# LLM/embedding/reranker optional dependencies
openai = ["openai>=1.0.0"]
cohere = ["cohere>=4.0.0"]
voyageai = ["voyageai>=0.1.0"]
ollama = ["ollama>=0.1.0"]
anthropic = ["anthropic>=0.5.0"]
google-generativeai = ["google-generativeai>=0.3.0"]

# Other optional dependencies
langchain = ["langchain-core>=0.2.0"]

# Convenience groups
all-dbs = [
    "faiss-cpu>=1.8.0",
    "chromadb>=0.5.5",
    "weaviate-client>=4.6.0",
    "qdrant-client>=1.8.0",
    "pymilvus>=2.3.5",
    "pinecone>=3.0.0",
    "boto3>=1.28.0"
]

all-models = [
    "openai>=1.0.0",
    "cohere>=4.0.0",
    "voyageai>=0.1.0",
    "ollama>=0.1.0",
    "anthropic>=0.5.0",
    "google-generativeai>=0.3.0",
]

# Complete installation with all optional dependencies
all = [
    "faiss-cpu>=1.8.0",
    "chromadb>=0.5.5",
    "weaviate-client>=4.6.0",
    "qdrant-client>=1.8.0",
    "pymilvus>=2.3.5",
    "pinecone>=3.0.0",
    "openai>=1.0.0",
    "cohere>=4.0.0",
    "voyageai>=0.1.0",
    "ollama>=0.1.0",
    "anthropic>=0.5.0",
    "google-generativeai>=0.3.0",
    "langchain-core>=0.2.0",
    "boto3>=1.28.0"
]

[tool.setuptools.packages.find]
where = ["."]
include = ["dsrag", "dsrag.*"]
exclude = ["dsrag.dsparse.tests", "dsrag.dsparse.tests.*", "dsrag.dsparse.dist", "dsrag.dsparse.dist.*"]